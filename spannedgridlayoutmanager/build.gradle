apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka-android'

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaAndroidTask) {
    delete "$rootDir/docs"

    outputFormat = 'html'
    outputDirectory = "$rootDir/docs"

    externalDocumentationLink {
        url = new URL("https://developer.android.com/reference/")
    }

    includeNonPublic = false

    // Always recreate documentation
    outputs.upToDateWhen { return false }
}

afterEvaluate {
    if (project.hasProperty("javadocJar")) {
        tasks.javadocJar.dependsOn dokkaJavadoc
    }
}


ext {

    package_name = 'io.github.joeiot'
    artifactVersion = '4.0.0_2021_06_23_1_SNAPSHOT'//release包发布的版本
    curFlavor = 'moorgen'

    artifactGroup = "spannedgridlayoutmanager"
    artifactFilePath = "${project.buildDir}/outputs/aar/${project.name}-" +
            "${(artifactVersion.endsWith('SNAPSHOT') || artifactVersion.endsWith('snapshot'))?'debug':'release'}.aar"

    bintrayRepo = 'maven'
    bintrayName = 'spannedgridlayoutmanager'

    libraryVersion = '4.0.0'
}

android {
    compileSdkVersion build_sdk_version
    buildToolsVersion build_tool_version

    defaultConfig {
        minSdkVersion min_api_level
        targetSdkVersion target_api_level
        versionCode 1
        versionName libraryVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

tasks.withType(Javadoc) {
    excludes = ['**/*.kt']
}

dependencies {
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

afterEvaluate {
    if(!artifactVersion.endsWith('SNAPSHOT') && !artifactVersion.endsWith('snapshot')){
        tasks.matching {
            (it.name.endsWith('artifactoryPublish'))
        }.each { tk ->
            tk.dependsOn('assembleRelease', 'generateSourcesJar')
        }
    }
}


// Maven Upload
//apply from: '../local-maven.gradle'
apply from: rootProject.file('./gradle-mvn-push.gradle')